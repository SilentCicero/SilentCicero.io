//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
//                                                                      //
// If you are using Chrome, open the Developer Tools and click the gear //
// icon in its lower right corner. In the General Settings panel, turn  //
// on 'Enable source maps'.                                             //
//                                                                      //
// If you are using Firefox 23, go to `about:config` and set the        //
// `devtools.debugger.source-maps-enabled` preference to true.          //
// (The preference should be on by default in Firefox 24; versions      //
// older than 23 do not support source maps.)                           //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

/* Imports */
var Meteor = Package.meteor.Meteor;

(function () {

//////////////////////////////////////////////////////////////////////////////////////
//                                                                                  //
// packages/mistereo:identicon/vendor/blockies/blockies.js                          //
//                                                                                  //
//////////////////////////////////////////////////////////////////////////////////////
                                                                                    //
(function() {                                                                       // 1
	// The output is pretty uniform, so it's probably fine                             // 2
	var randseed = 0;                                                                  // 3
	function seedrand(s) {                                                             // 4
		randseed = 0;                                                                     // 5
		for(var i = 0; i < s.length; i += 2) {                                            // 6
			var h = (s.charCodeAt(i) << 8) | s.charCodeAt(i + 1);                            // 7
			randseed ^= h;                                                                   // 8
		}                                                                                 // 9
	}                                                                                  // 10
	function rand() {                                                                  // 11
		var n = (Math.sin(randseed++) + 1) / 2; // Move range from -1 - 1 to 0 - 1        // 12
		var r = n * 10000; // Remove first few digits since they tend to have low entropy // 13
		n = r - Math.floor(r);                                                            // 14
		return n;                                                                         // 15
	}                                                                                  // 16
                                                                                    // 17
	function createColor() {                                                           // 18
		var h = Math.floor(rand() * 360);                                                 // 19
		var s = ((rand() * 50) + 50) + '%';                                               // 20
		var l = ((rand() * 60) + 20) + '%';                                               // 21
                                                                                    // 22
		var color = 'hsl(' + h + ',' + s + ',' + l + ')';                                 // 23
		return color;                                                                     // 24
	}                                                                                  // 25
                                                                                    // 26
	function createImageData(size) {                                                   // 27
		var width = size; // Only support square icons for now                            // 28
		var height = size;                                                                // 29
                                                                                    // 30
		var dataWidth = Math.ceil(width / 2);                                             // 31
		var mirrorWidth = width - dataWidth;                                              // 32
                                                                                    // 33
		var data = [];                                                                    // 34
		for(var y = 0; y < height; y++) {                                                 // 35
			var row = [];                                                                    // 36
			for(var x = 0; x < dataWidth; x++) {                                             // 37
				row[x] = rand() >= 0.5;                                                         // 38
			}                                                                                // 39
			var r = row.slice(0, mirrorWidth);                                               // 40
			r.reverse();                                                                     // 41
			row = row.concat(r);                                                             // 42
                                                                                    // 43
			for(var i = 0; i < row.length; i++) {                                            // 44
				data.push(row[i]);                                                              // 45
			}                                                                                // 46
		}                                                                                 // 47
                                                                                    // 48
		return data;                                                                      // 49
	}                                                                                  // 50
                                                                                    // 51
	function createCanvas(imageData, color, scale, bgcolor) {                          // 52
		var c = document.createElement('canvas');                                         // 53
		var width = Math.sqrt(imageData.length);                                          // 54
		c.width = c.height = width * scale;                                               // 55
                                                                                    // 56
		var cc = c.getContext('2d');                                                      // 57
		cc.fillStyle = bgcolor;                                                           // 58
		cc.fillRect(0, 0, c.width, c.height);                                             // 59
		cc.fillStyle = color;                                                             // 60
                                                                                    // 61
		for(var i = 0; i < imageData.length; i++) {                                       // 62
			var row = Math.floor(i / width);                                                 // 63
			var col = i % width;                                                             // 64
                                                                                    // 65
			if(imageData[i]) {                                                               // 66
				cc.fillRect(col * scale, row * scale, scale, scale);                            // 67
			}                                                                                // 68
		}                                                                                 // 69
                                                                                    // 70
		return c;                                                                         // 71
	}                                                                                  // 72
                                                                                    // 73
	function createIcon(opts) {                                                        // 74
		opts = opts || {};                                                                // 75
		var size = opts.size || 10;                                                       // 76
		var scale = opts.scale || 5;                                                      // 77
		var seed = opts.seed || Math.random().toString(36).substr(2);                     // 78
		var bgcolor = opts.bgcolor || '#fff';                                             // 79
                                                                                    // 80
		seedrand(seed);                                                                   // 81
                                                                                    // 82
		var color = opts.color || createColor();                                          // 83
		var imageData = createImageData(size);                                            // 84
		var canvas = createCanvas(imageData, color, scale, bgcolor);                      // 85
                                                                                    // 86
		return canvas;                                                                    // 87
	}                                                                                  // 88
                                                                                    // 89
	window.blockies = {create: createIcon};                                            // 90
})();                                                                               // 91
                                                                                    // 92
//////////////////////////////////////////////////////////////////////////////////////

}).call(this);






(function () {

//////////////////////////////////////////////////////////////////////////////////////
//                                                                                  //
// packages/mistereo:identicon/lib/identicon.js                                     //
//                                                                                  //
//////////////////////////////////////////////////////////////////////////////////////
                                                                                    //
'use strict';                                                                       // 1
                                                                                    // 2
if (Package.templating) {                                                           // 3
  Package.templating.Template.registerHelper('identicon', function (seed, opt) {    // 4
    opt = (opt && opt.hash) || {};                                                  // 5
    if (seed) {                                                                     // 6
      opt.seed = seed;                                                              // 7
    }                                                                               // 8
    return blockies.create(opt).toDataURL();                                        // 9
  });                                                                               // 10
}                                                                                   // 11
                                                                                    // 12
//////////////////////////////////////////////////////////////////////////////////////

}).call(this);


/* Exports */
if (typeof Package === 'undefined') Package = {};
Package['mistereo:identicon'] = {};

})();
